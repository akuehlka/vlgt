//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : EyeData.cpp
//  @ Date : 30/09/2012
//  @ Author : 
//
//


#include "EyeData.h"

using namespace cv;

Point2f EyeData::getLeftCornerPosition() {

}

Point2f EyeData::getRightCornerPosition() {

}

Point2f EyeData::getIrisPosition() {

}

EyeData::EyeData() {

}

EyeData::EyeData(cv::Rect win, Point2f lc, Point2f rc, Point2f i):
    window(win),
    leftCorner(lc),
    rightCorner(rc),
    iris(i),
    referential(WINDOW_LEFT_CORNER)
{
}

EyeData::EyeData(Rect win, Point2f lc, Point2f rc, Point2f i, FixedReference ref):
    window(win),
    leftCorner(lc),
    rightCorner(rc),
    iris(i),
    referential(ref)
{
}

void EyeData::normalizeData() {

}

double EyeData::getXRef() {
    // retorna um valor absoluto para o eixo x da íris, de acordo com um referencial fixo
    double ret = 0;

    switch (referential) {
    case EYE_LEFT_CORNER:                      // CANTO ESQUERDO DO OLHO
        ret = (double)iris.x - (double)leftCorner.x;
        break;
    case EYE_RIGHT_CORNER:                      // CANTO DIREITO DO OLHO
        ret = (double)iris.x - (double)(rightCorner.x + window.x);
        break;
    case WINDOW_LEFT_CORNER:                      // CANTO ESQUERDO DA JANELA
        ret = (double)iris.x - (double)window.x;
        break;
    case WINDOW_RIGHT_CORNER:                      // CANTO DIREITO DA JANELA
        ret = (double)iris.x - (double)(window.x + window.width);
        break;
    case IMAGE_LEFT_CORNER:                         // CANTO ESQUERDO DA IMAGEM
        ret = iris.x;
        break;
    }

    return fabs( ret );
}

double EyeData::getYRef() {
    // retorna um valor absoluto para o eixo Y da íris, de acordo com um referencial fixo
    double ret = 0;

    switch (referential) {
    case EYE_LEFT_CORNER:                      // CANTO ESQUERDO DO OLHO
        ret = (double)iris.y - (double)leftCorner.y;
        break;
    case EYE_RIGHT_CORNER:                      // CANTO DIREITO DO OLHO
        ret = (double)iris.y - (double)rightCorner.y;
        break;
    case WINDOW_LEFT_CORNER:                      // CANTO ESQUERDO/DIREITO DA JANELA
        ret = (double)iris.y - (double)(window.y + window.height);
        break;
    case WINDOW_RIGHT_CORNER:                      // CANTO ESQUERDO/DIREITO DA JANELA
        ret = (double)iris.y - (double)(window.y + window.height);
        break;
    case IMAGE_LEFT_CORNER:                         // CANTO ESQUERDO DA IMAGEM
        ret = iris.y;
        break;
    }
    return fabs( ret );
}
